// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  username   String    @unique
  email      String    @unique
  password   String
  bio        String    @default("Hello! I am new here.")
  posts      Post[]
  comments   Comment[]
  likes      Like[]

  // Follow system
  followers  Follow[]  @relation("FollowerRelation")
  following  Follow[]  @relation("FollowingRelation")

  createdAt  DateTime  @default(now())
}

model Post {
  id         String    @id @default(cuid())
  content    String
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String

  comments   Comment[]
  likes      Like[]

  createdAt  DateTime  @default(now())
}

model Comment {
  id         String    @id @default(cuid())
  content    String

  author     User      @relation(fields: [authorId], references: [id])
  authorId   String

  post       Post      @relation(fields: [postId], references: [id])
  postId     String

  createdAt  DateTime  @default(now())
}

model Like {
  id         String    @id @default(cuid())

  user       User      @relation(fields: [userId], references: [id])
  userId     String

  post       Post      @relation(fields: [postId], references: [id])
  postId     String

  createdAt  DateTime  @default(now())

  @@unique([userId, postId]) // Each user can like a post only once
}

model Follow {
  id           String   @id @default(cuid())

  follower     User     @relation("FollowerRelation", fields: [followerId], references: [id])
  followerId   String

  following    User     @relation("FollowingRelation", fields: [followingId], references: [id])
  followingId  String

  createdAt    DateTime @default(now())

  @@unique([followerId, followingId]) // Prevent duplicate follows
}